{"version":3,"sources":["components/NavBar.js","components/CardHeading.js","components/CardFooter.js","components/CountryRankingOption.js","components/CountryRankingItem.js","components/CountryRankingNavigation.js","components/Modes/RankingsMode.js","components/SearchBar.js","components/CountrySearchItem.js","components/MapboxGLMap.js","components/CountrySearchSingleDescription.js","components/CountrySearchDisplay.js","components/Modes/SearchMode.js","components/Card.js","services/countries.js","App.js","index.js"],"names":["StyledNav","styled","nav","StyledLink","span","NavBar","props","className","mode","onClick","setMode","StyledCardHeading","div","CardHeading","StyledFooter","a","CardFooter","href","StyledCountryRankingItem","StyledIcon","i","StyledInfoIcon","StyledPopupInfo","StyledButton","button","CountryRankingOption","iconClasses","title","value","target","rel","setOption","StyledRank","StyledFlag","img","StyledCountryName","StyledStatistic","CountryRankingItem","setSearch","countryName","rank","src","imgUrl","alt","imgAlt","statistic","StyledCountryRankingNavigation","StyledBackButton","StyledInput","input","StyledDescription","StyledOrder","CountryRankingNavigation","htmlFor","id","type","numberOfEntries","onChange","event","setNumberOfEntries","finalOrder","order","setOrder","RankingsMode","useState","option","rankedCountries","countries","sort","b","filter","country","slice","map","index","flag","name","formatThousands","SearchBar","search","placeholder","StyledCountrySearchItem","CountrySearchItem","toLowerCase","StyledMap","MapboxGLMap","setMap","mapContainer","useRef","useEffect","mapboxgl","accessToken","latlng","length","Map","container","current","style","center","zoom","on","resize","initialiseMap","ref","el","StyledCountrySearchSingleDescription","StyledHeading","h1","StyledCapitalText","p","StyledSection","section","StyledSectionHeading","CountrySearchSingleDescription","convertBordersToString","borderCodes","countryBorders","borders","border","find","join","convertCurrenciesToString","resultArr","currencies","concat","symbol","convertLanguagesToString","languages","nativeName","countrySimplified","capital","organisations","regionalBlocs","geography","region","subregion","timezones","area","economy","gini","people","population","demonym","org","acronym","CountrySearchDisplay","filteredCountries","singleCountry","includes","filterCountries","alpha3Code","SearchMode","StyledCard","Card","getCountries","axios","get","response","data","App","setCountries","localStorageCountries","JSON","parse","localStorage","getItem","countriesServices","setItem","stringify","retrieveCountries","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d815f7e.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledNav = styled.nav`\r\n  display: flex;\r\n  font-family: \"Open Sans\";\r\n  font-size: 1.25em;\r\n  background: #212121;\r\n  width: 65%;\r\n  min-width: 350px;\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n  color: white;\r\n  border-radius: 0 0 5px 5px;\r\n  overflow: hidden;\r\n\r\n  .active {\r\n    text-decoration: underline;\r\n    background-color: #333;\r\n  }\r\n\r\n  @media (max-width: 576px) {\r\n    width: 100%; \r\n    max-width: none;\r\n    border-radius: 0;\r\n  }\r\n`\r\n\r\nconst StyledLink = styled.span`\r\n  position: relative;\r\n  display: inline-block;\r\n  height: 100%;\r\n  width: 50%;\r\n  padding: 12px 0;\r\n  text-align: center;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst NavBar = props => {\r\n  return (\r\n    <StyledNav>\r\n      <StyledLink\r\n        className={ `${ props.mode === 'search' ? 'active' : '' }` }\r\n        onClick={ () => props.setMode('search') }\r\n      >\r\n        Search\r\n      </StyledLink>\r\n\r\n      <StyledLink\r\n        className={ `${ props.mode === 'rankings' ? 'active' : '' }` }\r\n        onClick={ () => props.setMode('rankings') }\r\n      >\r\n        Rankings\r\n      </StyledLink>\r\n    </StyledNav>\r\n  )\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledCardHeading = styled.div`\r\n  font-family: Concert One;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: #212121;\r\n  color: white;\r\n  font-size: 2em;\r\n  height: 2em;\r\n  padding-left: 25px;\r\n  box-sizing: border-box;\r\n  border-radius: 10px 10px 0px 0px; \r\n`\r\n\r\nconst CardHeading = () => {\r\n  return (\r\n    <StyledCardHeading>\r\n      COUNTRY DATA\r\n    </StyledCardHeading>\r\n  )\r\n}\r\n\r\nexport default CardHeading","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledFooter = styled.div`\r\n  font-family: Concert One;\r\n  padding: 10px 25px;\r\n  font-size: 14px;\r\n  background: #212121;\r\n  color: white;\r\n  border-radius: 0px 0px 10px 10px;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledLink = styled.a`\r\n  color: white;\r\n\r\n  &:visited {\r\n    color: white;\r\n  }\r\n`\r\n\r\nconst CardFooter = (props) => {\r\n  return (\r\n    <StyledFooter>\r\n      Data source: REST COUNTRIES (<StyledLink href='https://restcountries.eu/'>https://restcountries.eu</StyledLink>)\r\n    </StyledFooter>\r\n  )\r\n}\r\n\r\nexport default CardFooter","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledCountryRankingItem = styled.div`\r\n  transition: background 0.5s;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 25px;\r\n  border-top: 1px solid black;\r\n  background: #fafafa;\r\n  gap: 10px;\r\n\r\n  &:hover {\r\n    transition: background 0.5s;\r\n    background: #dcdcdc;\r\n  }\r\n`\r\n\r\nconst StyledIcon = styled.i`\r\n  color: #5c7cfa;\r\n  flex-basis: 30px;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledInfoIcon = styled.i`\r\n  position: relative;\r\n  z-index: 10;\r\n  color: #333;\r\n  flex-basis: 30px;\r\n  font-size: 20px;\r\n  text-align: center;\r\n  position: relative;\r\n  transition: color .2s;\r\n\r\n  &:hover {\r\n    color: #000;\r\n  }\r\n\r\n  &:hover div {\r\n    visibility: visible;\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nconst StyledPopupInfo = styled.div`\r\n  visibility: hidden;\r\n  opacity: 0;\r\n  text-align: left;\r\n  width: 200px;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  position: absolute;\r\n  top: -15px;\r\n  left: 35px;\r\n  background: #fff;\r\n  padding: 10px 20px;\r\n  border: 3px solid rgba(0, 0, 0, .7);\r\n  border-radius: 2px;\r\n  transition: all .2s;\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    top: 25px;\r\n    left: 0;\r\n    width: 150px;\r\n    padding: 5px 10px;\r\n  }\r\n`\r\n\r\nconst StyledButton = styled.button`\r\n  outline: none;\r\n  border: 0;\r\n  border-radius: 2px;\r\n  padding: 5px 10px;\r\n  background-color: #5c7cfa;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  color: white;\r\n  box-shadow: 0 2px 2px rgba(0, 0, 0, .3);\r\n  transition: background-color .1s;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: #224efd;\r\n  }\r\n`\r\n\r\nconst CountryRankingOption = props => {\r\n  return (\r\n    <StyledCountryRankingItem >\r\n      <StyledIcon className={props.iconClasses}></StyledIcon>\r\n      <p>{props.title}</p>\r\n      { \r\n      props.value === 'gini' \r\n      ? \r\n\r\n      <StyledInfoIcon className=\"fas fa-info-circle\">\r\n        <StyledPopupInfo>\r\n        <p>Gini index is a measure of an economy's distribution of income. The higher the index, the more economically unequal the country is. For more information, <a href=\"https://databank.worldbank.org/metadataglossary/gender-statistics/series/SI.POV.GINI\" target=\"_blank\" rel=\"noreferrer\">click here</a>.</p>\r\n        </StyledPopupInfo>\r\n      </StyledInfoIcon> \r\n\r\n      : null \r\n\r\n      }\r\n\r\n      <StyledButton onClick={() => props.setOption(props.value)}>view</StyledButton>\r\n    </StyledCountryRankingItem>\r\n  )\r\n}\r\n\r\nexport default CountryRankingOption","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledCountryRankingItem = styled.div`\r\n  transition: background 0.5s;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 25px;\r\n  border-top: 1px solid black;\r\n  background: #fafafa;\r\n  gap: 20px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    transition: background 0.5s;\r\n    background: #dcdcdc;\r\n  }\r\n`\r\n\r\nconst StyledRank = styled.span`\r\n  font-weight: 800;\r\n  color: #212121;\r\n`\r\n\r\nconst StyledFlag = styled.img`\r\n  width: 50px;\r\n  flex-basis: auto;\r\n`\r\n\r\nconst StyledCountryName = styled.span`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst StyledStatistic = styled.span`\r\n  flex-grow: 0;\r\n  flex-basis: auto;\r\n  text-align: right;\r\n`\r\n\r\nconst CountryRankingItem = props => {\r\n  const viewCountryDetails = () => {\r\n    props.setMode('search');\r\n    props.setSearch(props.countryName);\r\n  }\r\n\r\n  return (\r\n    <StyledCountryRankingItem\r\n      onClick={viewCountryDetails}\r\n    >\r\n      <StyledRank>{props.rank}</StyledRank>\r\n      <StyledFlag src={props.imgUrl} alt={props.imgAlt} />\r\n      <StyledCountryName>{props.countryName}</StyledCountryName>\r\n      <StyledStatistic>{props.statistic}</StyledStatistic>\r\n    </StyledCountryRankingItem>\r\n  )\r\n}\r\n\r\nexport default CountryRankingItem","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledCountryRankingNavigation = styled.div`\r\n  display: flex;\r\n  margin: 20px 30px;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  font-family: Open Sans;\r\n  padding: 0px 25px;\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    margin: 20px 0;\r\n  }\r\n`\r\n\r\nconst StyledBackButton = styled.span`\r\n  transition: background 0.5s;\r\n  background: #5c7cfa;\r\n  color: white;\r\n  font-size: 1.25em;\r\n  padding: 10px 20px;\r\n  border-radius: 3px;\r\n  transition: background .2s;\r\n\r\n  &:hover {\r\n    transition: background 0.5s;\r\n    background: #224efd;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width: 50px;\r\n  font-family: Open Sans;\r\n  font-size: 1.25em;\r\n  appearance: none;\r\n  -moz-appearance: textfield;\r\n\r\n  &::-webkit-outer-spin-button,\r\n  &::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n`\r\n\r\nconst StyledDescription = styled.span`\r\n  display: flex;\r\n  font-family: Open Sans;\r\n  font-weight: 800;\r\n  font-size: 1.5em;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n`\r\n\r\nconst StyledOrder = styled.div`\r\n  cursor: pointer;\r\n\r\n  & > label {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst StyledIcon = styled.span`\r\n  color: #4EA32A;\r\n  font-size: 35px;\r\n`\r\n\r\nconst CountryRankingNavigation = props => {\r\n  const toggleOrder = () => {\r\n    const finalOrder = props.order === 'ascending' ? 'descending' : props.order === 'descending' ? 'ascending' : ''\r\n    props.setOrder(finalOrder)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <StyledDescription>Ranked by { props.statistic }</StyledDescription>\r\n      <StyledCountryRankingNavigation>\r\n        <StyledBackButton onClick={ () => props.setOption('') }>Back</StyledBackButton>\r\n        <div>\r\n          <label htmlFor='entries'>entries: </label>\r\n          <StyledInput \r\n            id='entries' \r\n            type='number'\r\n            value={ props.numberOfEntries } \r\n            onChange={ event => props.setNumberOfEntries(event.target.value) }\r\n          />\r\n        </div>\r\n        <StyledOrder onClick={ toggleOrder }>\r\n          <StyledIcon \r\n            className={props.order === 'ascending' ? 'fas fa-sort-numeric-up-alt' : 'fas fa-sort-numeric-down-alt' }\r\n          >\r\n          </StyledIcon>\r\n        </StyledOrder>\r\n      </StyledCountryRankingNavigation>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CountryRankingNavigation","import React, { useState } from 'react'\r\nimport CountryRankingOption from '../CountryRankingOption'\r\nimport CountryRankingItem from '../CountryRankingItem'\r\nimport CountryRankingNavigation from '../CountryRankingNavigation'\r\nimport formatThousands from 'format-thousands'\r\n\r\nconst RankingsMode = props => {  \r\n\r\n  const [numberOfEntries, setNumberOfEntries] = useState(25)\r\n  const [order, setOrder] = useState('ascending')\r\n\r\n  if (!props.option) {\r\n    return (\r\n      <>\r\n        <CountryRankingOption \r\n          iconClasses='fas fa-users'\r\n          title='population'\r\n          value='population'\r\n          setOption={props.setOption}\r\n        />\r\n        <CountryRankingOption \r\n          iconClasses='fas fa-globe-asia'\r\n          title='land area'\r\n          value='area'\r\n          setOption={props.setOption}\r\n        />\r\n        <CountryRankingOption \r\n          iconClasses='fas fa-dollar-sign'\r\n          title='gini index'\r\n          value='gini'\r\n          setOption={props.setOption}\r\n        />\r\n      </>\r\n    )\r\n  } else {\r\n\r\n    const option = props.option\r\n\r\n    const sortAscending = (a, b) => a[option] - b[option]\r\n    const sortDescending = (a, b) => b[option] - a[option]\r\n  \r\n    const rankedCountries = props.countries\r\n      .sort(order === 'descending' ? sortDescending : sortAscending)\r\n      .filter(country => country[option]) // remove countries that don't have the statistic in question \r\n      .slice(0, numberOfEntries)\r\n  \r\n    return (\r\n      <>\r\n        <CountryRankingNavigation\r\n          statistic={ props.option }\r\n          setOption={ props.setOption }\r\n          numberOfEntries={ numberOfEntries }\r\n          setNumberOfEntries={ setNumberOfEntries }\r\n          order={ order }\r\n          setOrder={ setOrder }\r\n        />\r\n        {rankedCountries.map((country, index) => \r\n          <CountryRankingItem \r\n            key={ index+ 1}\r\n            rank={ index+1 }\r\n            imgUrl={ country.flag }\r\n            imgAlt={`${ country.name } flag`}\r\n            countryName={ country.name }\r\n            statistic={ `${formatThousands(country[option] , ',')} ${option === 'area' ? 'km²' : ''}` }\r\n            setMode={ props.setMode }\r\n            setSearch = { props.setSearch }\r\n          />\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RankingsMode","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledInput = styled.input`\r\n  font-family: Arial;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  font-size: 20px;\r\n  padding: 15px 25px;\r\n  border: 0;\r\n  border-bottom: 5px solid #212121;\r\n\r\n  &:focus {\r\n    outline: 2px solid black;\r\n  }\r\n`\r\n\r\nconst SearchBar = props => {\r\n  return (\r\n    <StyledInput \r\n      value={props.search}\r\n      onChange={event => props.setSearch(event.target.value)}\r\n      placeholder='Enter country...'\r\n    />\r\n  )\r\n}\r\n\r\nexport default SearchBar","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledCountrySearchItem = styled.div`\r\n  transition: background 0.5s;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 25px;\r\n  border-top: 1px solid black;\r\n  background: #fafafa;\r\n  gap: 10px;\r\n\r\n  &:hover {\r\n    transition: background 0.5s;\r\n    cursor: pointer;\r\n    background: #dcdcdc;\r\n  }\r\n`\r\n\r\nconst StyledFlag = styled.img`\r\n  width: 50px;\r\n  flex-basis: auto;\r\n`\r\n\r\nconst StyledCountryName = styled.span`\r\n  flex-grow: 1;\r\n  flex-basis: auto;\r\n`\r\n\r\nconst CountrySearchItem = props => {\r\n  return (\r\n    <StyledCountrySearchItem onClick={() => props.setSearch(props.countryName.toLowerCase())}>\r\n      <StyledFlag src={props.imgUrl} alt={props.imgAlt} />\r\n      <StyledCountryName>{props.countryName}</StyledCountryName>\r\n    </StyledCountrySearchItem>\r\n  )\r\n}\r\n\r\nexport default CountrySearchItem","import React, { useEffect, useRef, useState } from 'react'\r\nimport mapboxgl from 'mapbox-gl'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledMap = styled.div`\r\n  margin-top: 20px;\r\n  width: 100%;\r\n  height: 250px;\r\n`\r\nconst MapboxGLMap = props => {\r\n  const [map, setMap] = useState(null)\r\n  const mapContainer = useRef(null)\r\n\r\n  useEffect(() => {\r\n    mapboxgl.accessToken = 'pk.eyJ1Ijoiam9obmF0YW5mIiwiYSI6ImNraTN3eWVuazA2cGYycG53aXJiMnN3ODgifQ.9l8q7pBtoBK-Cgkoz-Z4cQ'\r\n    const initialiseMap = ({ setMap, mapContainer }) => {\r\n\r\n      let map = null;\r\n\r\n      if(props.country.latlng.length) {\r\n        map = new mapboxgl.Map({\r\n          container: mapContainer.current,\r\n          style: 'mapbox://styles/mapbox/streets-v11',\r\n          center: [props.country.latlng[1], props.country.latlng[0]],\r\n          zoom: 2\r\n        })\r\n\r\n        map.on('load', () => {\r\n          setMap(map)\r\n          map.resize()\r\n        })\r\n      }\r\n    }\r\n\r\n    if (!map) initialiseMap({ setMap, mapContainer })\r\n    \r\n    }, [map, props.country.latlng])\r\n  \r\n  return props.country.latlng ? <StyledMap ref={el => (mapContainer.current = el)}></StyledMap> : null;\r\n}\r\n\r\nexport default MapboxGLMap","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport MapboxGLMap from './MapboxGLMap'\r\nimport formatThousands from 'format-thousands'\r\n\r\nconst StyledCountrySearchSingleDescription = styled.div`\r\n  padding: 0px 25px 20px 25px;\r\n  margin-top: 20px;\r\n`\r\n\r\nconst StyledHeading = styled.h1`\r\n  font-size: 2em;\r\n  font-weight: 600;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledFlag = styled.img`\r\n  display: block;\r\n  width: 50%;\r\n  margin: 20px auto;\r\n  box-shadow: 1px 1px 3px #adadad;\r\n`\r\n\r\nconst StyledCapitalText = styled.p`\r\n  text-align: center;\r\n`\r\n\r\nconst StyledSection = styled.section`\r\n  margin: 30px 0;\r\n\r\n  & > ul > li {\r\n    margin: 10px 0;\r\n  }\r\n`\r\n\r\nconst StyledSectionHeading = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.25em;\r\n  font-weight: 600;\r\n`\r\n\r\nconst StyledIcon = styled.i`\r\n  color: #5c7cfa;\r\n  width: 30px;\r\n`\r\n\r\nconst CountrySearchSingleDescription = props => {\r\n  const convertBordersToString = () => {\r\n    const borderCodes = props.borderCodes\r\n    let countryBorders = props.country.borders\r\n    countryBorders = countryBorders.map(border => {\r\n      return borderCodes.find(country => country[border])[border]\r\n    })\r\n    return countryBorders.join(', ')\r\n  }\r\n  \r\n  const convertCurrenciesToString = () => {\r\n    let resultArr = []\r\n    for(let i = 0; i < props.country.currencies.length; i++) {\r\n      resultArr = resultArr.concat(`${props.country.currencies[i].name} (${props.country.currencies[i].symbol})`)\r\n    }\r\n    return resultArr.join(', ')\r\n  }\r\n\r\n  const convertLanguagesToString = () => {\r\n    let resultArr = []\r\n    for(let i = 0; i < props.country.languages.length; i++) {\r\n      resultArr = resultArr.concat(`${props.country.languages[i].name} (${props.country.languages[i].nativeName})`)\r\n    }\r\n    return resultArr.join(', ')\r\n  }\r\n\r\n  const countrySimplified = {\r\n    capital: props.country.capital,\r\n    flag: props.country.flag,\r\n    organisations: {\r\n      regionalBlocs: props.country.regionalBlocs\r\n    },\r\n    geography: {\r\n      region: props.country.region,\r\n      subregion: props.country.subregion,\r\n      borders: convertBordersToString(),\r\n      timezones: props.country.timezones.join(', '),\r\n      area: props.country.area\r\n    },\r\n    economy: {\r\n      gini: props.country.gini,\r\n      currencies: convertCurrenciesToString()\r\n    },\r\n    people: {\r\n      population: props.country.population,\r\n      demonym: props.country.demonym,\r\n      languages: convertLanguagesToString()\r\n    }\r\n  }\r\n    \r\n  return (\r\n    <StyledCountrySearchSingleDescription>         \r\n      <StyledHeading>{countrySimplified.name}</StyledHeading>\r\n      <StyledFlag src={countrySimplified.flag} alt={`${countrySimplified.name} flag`}/>\r\n      <StyledCapitalText>{countrySimplified.capital ? `capital: ${countrySimplified.capital}` : ''}</StyledCapitalText>\r\n      <MapboxGLMap country={props.country} />\r\n\r\n      {\r\n      countrySimplified.organisations.regionalBlocs.length \r\n      ?\r\n      <StyledSection>\r\n        <StyledSectionHeading>\r\n          <StyledIcon className=\"fas fa-landmark\"></StyledIcon>\r\n          <span>ORGANISATIONS</span>\r\n        </StyledSectionHeading>\r\n        <ul>\r\n          {countrySimplified.organisations.regionalBlocs.map(org => (\r\n            <li key={org.acronym}>\r\n              {`${org.acronym} (${org.name})`}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </StyledSection>\r\n      :\r\n      null\r\n      }\r\n\r\n      <StyledSection>\r\n        <StyledSectionHeading>\r\n          <StyledIcon className=\"fas fa-globe-asia\"></StyledIcon>\r\n          <span>GEOGRAPHY</span>\r\n        </StyledSectionHeading>\r\n        <ul>\r\n          { countrySimplified.geography.region ? <li>Region: { countrySimplified.geography.region }</li> : null }\r\n          { countrySimplified.geography.subregion ? <li>Subregion: { countrySimplified.geography.subregion }</li> : null }\r\n          { countrySimplified.geography.borders ? <li>Borders: { convertBordersToString() }</li> : null }\r\n          { countrySimplified.geography.timezones ? <li>Timezones: { countrySimplified.geography.timezones }</li> : null }\r\n          { countrySimplified.geography.area ? <li>Land area: { `${formatThousands(countrySimplified.geography.area, ',')} km²` }</li> : null }\r\n        </ul>\r\n      </StyledSection>\r\n\r\n      <StyledSection>\r\n        <StyledSectionHeading>\r\n          <StyledIcon className=\"fas fa-dollar-sign\"></StyledIcon>\r\n          <span>ECONOMY</span>\r\n        </StyledSectionHeading>\r\n        <ul>\r\n          { countrySimplified.economy.gini ? <li>Gini index: { countrySimplified.economy.gini }</li> : null }\r\n          { countrySimplified.economy.currencies ? <li>Currencies: { convertCurrenciesToString() }</li> : null }\r\n        </ul>\r\n      </StyledSection>\r\n\r\n      <StyledSection>\r\n        <StyledSectionHeading>\r\n          <StyledIcon className=\"fas fa-users\"></StyledIcon>\r\n          <span>PEOPLE</span>\r\n        </StyledSectionHeading>\r\n        <ul>\r\n          { countrySimplified.people.population ? <li>Population: { formatThousands(countrySimplified.people.population, ',') }</li> : null }\r\n          { countrySimplified.people.demonym ? <li>Demonym: { countrySimplified.people.demonym }</li> : null }\r\n          { countrySimplified.people.languages ? <li>Languages: { convertLanguagesToString() }</li> : null }\r\n        </ul>\r\n      </StyledSection>\r\n    </StyledCountrySearchSingleDescription>\r\n  )\r\n}\r\n\r\nexport default CountrySearchSingleDescription","import React from 'react'\r\nimport CountrySearchItem from './CountrySearchItem'\r\nimport CountrySearchSingleDescription from './CountrySearchSingleDescription'\r\n\r\nconst CountrySearchDisplay = props => {\r\n  const filterCountries = () => {\r\n    const singleCountry = props.countries.find(country => {\r\n      return country.name.toLowerCase() === props.search.toLowerCase()\r\n    })\r\n\r\n    if(singleCountry) {\r\n      return [singleCountry]\r\n    } else {\r\n      return props.countries.filter(country => {\r\n        return country.name.toLowerCase().includes(props.search.toLowerCase())\r\n      })\r\n    }\r\n  }\r\n\r\n  const filteredCountries = filterCountries(); \r\n\r\n  const borderCodes = props.countries.map(country => {\r\n    return { [country.alpha3Code]: country.name }\r\n  })\r\n\r\n  if(filteredCountries.length === 1) {\r\n    return <CountrySearchSingleDescription country={ filteredCountries[0] } borderCodes={ borderCodes }/> \r\n  }\r\n  else if(filteredCountries.length <= 5) {\r\n    return (\r\n      <div>\r\n        {filteredCountries.map(country => (\r\n          <CountrySearchItem\r\n            key={country.name}\r\n            imgUrl={country.flag}\r\n            imgAlt={`${country.name} flag`}\r\n            countryName={country.name}\r\n            setSearch={props.setSearch}\r\n          />\r\n        )\r\n        )}\r\n      </div>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default CountrySearchDisplay","import React from 'react'\r\nimport SearchBar from '../SearchBar'\r\nimport CountrySearchDisplay from '../CountrySearchDisplay'\r\n\r\nconst SearchMode = props => {\r\n  return (\r\n    <>\r\n      <SearchBar\r\n        search={props.search}\r\n        setSearch={props.setSearch}\r\n      />\r\n      <CountrySearchDisplay \r\n        countries={props.countries}\r\n        search={props.search}\r\n        setSearch={props.setSearch}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchMode","import React from 'react'\r\nimport CardHeading from './CardHeading'\r\nimport CardFooter from './CardFooter'\r\nimport RankingsMode from './Modes/RankingsMode'\r\nimport SearchMode from './Modes/SearchMode'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledCard = styled.div`\r\n  font-family: Open Sans;\r\n  box-shadow: 5px 5px 2px rgba(0, 0, 0, 0.5);\r\n  border-radius: 10px 10px 10px 10px;\r\n  margin: 50px auto 35px auto;\r\n  width: 65%;\r\n  min-width: 350px;\r\n  max-width: 500px;\r\n  background: white;\r\n`\r\n\r\nconst Card = props => {\r\n  return (\r\n    <StyledCard>\r\n      <CardHeading />\r\n        {\r\n\r\n        props.mode === 'search'\r\n        ?\r\n        <SearchMode \r\n          countries={props.countries}\r\n          search={props.search}\r\n          setSearch={props.setSearch}\r\n        />\r\n        :\r\n        <RankingsMode \r\n          countries={props.countries} \r\n          option={props.option}\r\n          setOption={props.setOption}\r\n          setMode={props.setMode}\r\n          setSearch={props.setSearch}\r\n        />\r\n        \r\n        }\r\n      <CardFooter />\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default Card","import axios from 'axios'\r\n\r\nconst url = 'https://restcountries.eu/rest/v2/all'\r\n\r\nconst getCountries = async () => {\r\n  const response = await axios.get(url)\r\n  const data = response.data\r\n  return data\r\n}\r\n\r\nexport default { getCountries }","import React, { useState, useEffect } from 'react'\nimport NavBar from './components/NavBar'\nimport Card from './components/Card'\nimport countriesServices from './services/countries'\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [search, setSearch] = useState('')\n  const [option, setOption] = useState('')\n  const [mode, setMode] = useState('search') // options: 'search' and 'rankings' \n\n  useEffect(() => { // retrieve countries from api or from local storage \n    const retrieveCountries = async () => {\n      const localStorageCountries = JSON.parse(localStorage.getItem('countries'))\n      if(localStorageCountries && localStorageCountries.length === 250) { // check if local storage has the correct data \n        setCountries(JSON.parse(localStorage.getItem('countries')))\n      } else {\n        const countries = await countriesServices.getCountries()\n        setCountries(countries)\n        localStorage.setItem('countries', JSON.stringify(countries))\n      }\n    }\n\n    retrieveCountries()\n  }, [])\n  \n  return (\n    <div>\n      <NavBar \n        mode={mode}\n        setMode={setMode}\n      />\n      <Card \n        search={search}\n        setSearch={setSearch}\n        countries={countries}\n        option={option}\n        setOption={setOption}\n        mode={mode}\n        setMode={setMode}\n      />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}