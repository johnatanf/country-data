{"version":3,"sources":["components/NavBar.js","components/CardHeading.js","components/CardFooter.js","components/CountryRankingOption.js","components/CountryRankingItem.js","components/CountryRankingNavigation.js","components/Modes/RankingsMode.js","components/SearchBar.js","components/CountrySearchItem.js","components/MapboxGLMap.js","components/CountrySearchSingleDescription.js","components/CountrySearchDisplay.js","components/Modes/SearchMode.js","components/Card.js","services/countries.js","App.js","index.js"],"names":["StyledNav","styled","nav","StyledLink","span","NavBar","props","className","mode","onClick","setMode","StyledCardHeading","div","CardHeading","StyledFooter","a","CardFooter","href","StyledCountryRankingItem","StyledIcon","i","StyledInfoIcon","StyledPopupInfo","StyledButton","button","CountryRankingOption","iconClasses","title","value","target","rel","setOption","StyledRank","StyledFlag","img","StyledCountryName","StyledStatistic","CountryRankingItem","setSearch","countryName","rank","src","imgUrl","alt","imgAlt","statistic","StyledCountryRankingNavigation","StyledBackButton","StyledInput","input","StyledDescription","StyledOrder","CountryRankingNavigation","htmlFor","id","type","numberOfEntries","onChange","event","setNumberOfEntries","finalOrder","order","setOrder","RankingsMode","option","rankedCountries","countries","sort","b","filter","country","slice","map","index","flag","name","formatThousands","SearchBar","search","placeholder","StyledCountrySearchItem","CountrySearchItem","toLowerCase","StyledMap","MapboxGLMap","useState","setMap","mapContainer","useRef","useEffect","mapboxgl","accessToken","latlng","length","Map","container","current","style","center","zoom","on","resize","initialiseMap","ref","el","StyledCountrySearchSingleDescription","StyledHeading","h1","StyledCapitalText","p","StyledSection","section","StyledSectionHeading","CountrySearchSingleDescription","convertBordersToString","borderCodes","countryBorders","borders","border","find","join","convertCurrenciesToString","resultArr","currencies","concat","symbol","convertLanguagesToString","languages","nativeName","countrySimplified","capital","organisations","regionalBlocs","geography","region","subregion","timezones","area","economy","gini","people","population","demonym","org","acronym","CountrySearchDisplay","filteredCountries","singleCountry","includes","filterCountries","alpha3Code","SearchMode","StyledCard","Card","getCountries","axios","get","response","data","App","setCountries","localStorageCountries","JSON","parse","localStorage","getItem","countriesServices","setItem","stringify","retrieveCountries","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38385b3e.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledNav = styled.nav`\n  display: flex;\n  font-family: \"Open Sans\";\n  font-size: 1.25em;\n  background: #333;\n  width: 65%;\n  min-width: 350px;\n  max-width: 500px;\n  margin: 0 auto;\n  color: white;\n  border-radius: 0 0 5px 5px;\n  overflow: hidden;\n\n  .active {\n    text-decoration: underline;\n    background-color: #212121;\n  }\n\n  @media (max-width: 576px) {\n    width: 100%; \n    max-width: none;\n    border-radius: 0;\n  }\n`\n\nconst StyledLink = styled.span`\n  position: relative;\n  display: inline-block;\n  height: 100%;\n  width: 50%;\n  padding: 12px 0;\n  text-align: center;\n\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst NavBar = props => {\n  return (\n    <StyledNav>\n      <StyledLink\n        className={ `${ props.mode === 'search' ? 'active' : '' }` }\n        onClick={ () => props.setMode('search') }\n      >\n        Search\n      </StyledLink>\n\n      <StyledLink\n        className={ `${ props.mode === 'rankings' ? 'active' : '' }` }\n        onClick={ () => props.setMode('rankings') }\n      >\n        Rankings\n      </StyledLink>\n    </StyledNav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledCardHeading = styled.div`\n  font-family: Concert One;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  background: #212121;\n  color: white;\n  font-size: 2em;\n  height: 2em;\n  padding-left: 25px;\n  box-sizing: border-box;\n  border-radius: 10px 10px 0px 0px; \n`\n\nconst CardHeading = () => {\n  return (\n    <StyledCardHeading>\n      COUNTRY DATA\n    </StyledCardHeading>\n  )\n}\n\nexport default CardHeading","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledFooter = styled.div`\n  font-family: Concert One;\n  padding: 10px 25px;\n  font-size: 14px;\n  background: #212121;\n  color: white;\n  border-radius: 0px 0px 10px 10px;\n  text-align: center;\n`\n\nconst StyledLink = styled.a`\n  color: white;\n\n  &:visited {\n    color: white;\n  }\n`\n\nconst CardFooter = (props) => {\n  return (\n    <StyledFooter>\n      Data source: REST COUNTRIES (<StyledLink href='https://restcountries.eu/'>https://restcountries.eu</StyledLink>)\n    </StyledFooter>\n  )\n}\n\nexport default CardFooter","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledCountryRankingItem = styled.div`\n  transition: background 0.5s;\n  display: flex;\n  align-items: center;\n  padding: 25px;\n  border-top: 1px solid black;\n  background: #fafafa;\n  gap: 10px;\n\n  &:hover {\n    transition: background 0.5s;\n    background: #dcdcdc;\n  }\n`\n\nconst StyledIcon = styled.i`\n  color: #5c7cfa;\n  flex-basis: 30px;\n  text-align: center;\n`\n\nconst StyledInfoIcon = styled.i`\n  position: relative;\n  z-index: 10;\n  color: #333;\n  flex-basis: 30px;\n  font-size: 20px;\n  text-align: center;\n  position: relative;\n  transition: color .2s;\n\n  &:hover {\n    color: #000;\n  }\n\n  &:hover div {\n    visibility: visible;\n    opacity: 1;\n  }\n`\n\nconst StyledPopupInfo = styled.div`\n  visibility: hidden;\n  opacity: 0;\n  text-align: left;\n  width: 200px;\n  font-family: \"Open Sans\", sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  position: absolute;\n  top: -15px;\n  left: 35px;\n  background: #fff;\n  padding: 10px 20px;\n  border: 3px solid rgba(0, 0, 0, .7);\n  border-radius: 2px;\n  transition: all .2s;\n\n  @media only screen and (max-width: 600px) {\n    top: 25px;\n    left: 0;\n    width: 150px;\n    padding: 5px 10px;\n  }\n`\n\nconst StyledButton = styled.button`\n  outline: none;\n  border: 0;\n  border-radius: 2px;\n  padding: 5px 10px;\n  background-color: #5c7cfa;\n  font-family: \"Open Sans\", sans-serif;\n  color: white;\n  box-shadow: 0 2px 2px rgba(0, 0, 0, .3);\n  transition: background-color .1s;\n\n  &:hover {\n    cursor: pointer;\n    background-color: #224efd;\n  }\n`\n\nconst CountryRankingOption = props => {\n  return (\n    <StyledCountryRankingItem >\n      <StyledIcon className={props.iconClasses}></StyledIcon>\n      <p>{props.title}</p>\n      { \n      props.value === 'gini' \n      ? \n\n      <StyledInfoIcon className=\"fas fa-info-circle\">\n        <StyledPopupInfo>\n        <p>Gini index is a measure of an economy's distribution of income. The higher the index, the more economically unequal the country is. For more information, <a href=\"https://databank.worldbank.org/metadataglossary/gender-statistics/series/SI.POV.GINI\" target=\"_blank\" rel=\"noreferrer\">click here</a>.</p>\n        </StyledPopupInfo>\n      </StyledInfoIcon> \n\n      : null \n\n      }\n\n      <StyledButton onClick={() => props.setOption(props.value)}>view</StyledButton>\n    </StyledCountryRankingItem>\n  )\n}\n\nexport default CountryRankingOption","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledCountryRankingItem = styled.div`\n  transition: background 0.5s;\n  display: flex;\n  align-items: center;\n  padding: 25px;\n  border-top: 1px solid black;\n  background: #fafafa;\n  gap: 20px;\n  cursor: pointer;\n\n  &:hover {\n    transition: background 0.5s;\n    background: #dcdcdc;\n  }\n`\n\nconst StyledRank = styled.span`\n  font-weight: 800;\n  color: #212121;\n`\n\nconst StyledFlag = styled.img`\n  width: 50px;\n  flex-basis: auto;\n`\n\nconst StyledCountryName = styled.span`\n  flex-grow: 1;\n`\n\nconst StyledStatistic = styled.span`\n  flex-grow: 0;\n  flex-basis: auto;\n  text-align: right;\n`\n\nconst CountryRankingItem = props => {\n  const viewCountryDetails = () => {\n    props.setMode('search');\n    props.setSearch(props.countryName);\n  }\n\n  return (\n    <StyledCountryRankingItem\n      onClick={viewCountryDetails}\n    >\n      <StyledRank>{props.rank}</StyledRank>\n      <StyledFlag src={props.imgUrl} alt={props.imgAlt} />\n      <StyledCountryName>{props.countryName}</StyledCountryName>\n      <StyledStatistic>{props.statistic}</StyledStatistic>\n    </StyledCountryRankingItem>\n  )\n}\n\nexport default CountryRankingItem","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledCountryRankingNavigation = styled.div`\n  display: flex;\n  margin: 20px 30px;\n  justify-content: space-around;\n  align-items: center;\n  font-family: Open Sans;\n  padding: 0px 25px;\n\n  @media only screen and (max-width: 600px) {\n    margin: 20px 0;\n  }\n`\n\nconst StyledBackButton = styled.span`\n  transition: background 0.5s;\n  background: #5c7cfa;\n  color: white;\n  font-size: 1.25em;\n  padding: 10px 20px;\n  border-radius: 3px;\n  transition: background .2s;\n\n  &:hover {\n    transition: background 0.5s;\n    background: #224efd;\n    cursor: pointer;\n  }\n`\n\nconst StyledInput = styled.input`\n  width: 50px;\n  font-family: Open Sans;\n  font-size: 1.25em;\n  appearance: none;\n  -moz-appearance: textfield;\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`\n\nconst StyledDescription = styled.span`\n  display: flex;\n  font-family: Open Sans;\n  font-weight: 800;\n  font-size: 1.5em;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n`\n\nconst StyledOrder = styled.div`\n  cursor: pointer;\n\n  & > label {\n    cursor: pointer;\n  }\n`\n\nconst StyledIcon = styled.span`\n  color: #4EA32A;\n  font-size: 35px;\n`\n\nconst CountryRankingNavigation = props => {\n  const toggleOrder = () => {\n    const finalOrder = props.order === 'ascending' ? 'descending' : props.order === 'descending' ? 'ascending' : ''\n    props.setOrder(finalOrder)\n  }\n  \n  return (\n    <>\n      <StyledDescription>Ranked by { props.statistic }</StyledDescription>\n      <StyledCountryRankingNavigation>\n        <StyledBackButton onClick={ () => props.setOption('') }>Back</StyledBackButton>\n        <div>\n          <label htmlFor='entries'>entries: </label>\n          <StyledInput \n            id='entries' \n            type='number'\n            value={ props.numberOfEntries } \n            onChange={ event => props.setNumberOfEntries(event.target.value) }\n          />\n        </div>\n        <StyledOrder onClick={ toggleOrder }>\n          <StyledIcon \n            className={props.order === 'ascending' ? 'fas fa-sort-numeric-up-alt' : 'fas fa-sort-numeric-down-alt' }\n          >\n          </StyledIcon>\n        </StyledOrder>\n      </StyledCountryRankingNavigation>\n    </>\n  )\n}\n\nexport default CountryRankingNavigation","import React from 'react'\nimport CountryRankingOption from '../CountryRankingOption'\nimport CountryRankingItem from '../CountryRankingItem'\nimport CountryRankingNavigation from '../CountryRankingNavigation'\nimport formatThousands from 'format-thousands'\n\nconst RankingsMode = props => {  \n\n  if (!props.option) {\n    return (\n      <>\n        <CountryRankingOption \n          iconClasses='fas fa-users'\n          title='population'\n          value='population'\n          setOption={props.setOption}\n        />\n        <CountryRankingOption \n          iconClasses='fas fa-globe-asia'\n          title='land area'\n          value='area'\n          setOption={props.setOption}\n        />\n        <CountryRankingOption \n          iconClasses='fas fa-dollar-sign'\n          title='gini index'\n          value='gini'\n          setOption={props.setOption}\n        />\n      </>\n    )\n  } else {\n\n    const option = props.option\n\n    const sortAscending = (a, b) => a[option] - b[option]\n    const sortDescending = (a, b) => b[option] - a[option]\n  \n    const rankedCountries = props.countries\n      .sort(props.order === 'descending' ? sortDescending : sortAscending)\n      .filter(country => country[option]) // remove countries that don't have the statistic in question \n      .slice(0, props.numberOfEntries)\n  \n    return (\n      <>\n        <CountryRankingNavigation\n          statistic={ props.option }\n          setOption={ props.setOption }\n          numberOfEntries={ props.numberOfEntries }\n          setNumberOfEntries={ props.setNumberOfEntries }\n          order={ props.order }\n          setOrder={ props.setOrder }\n        />\n        {rankedCountries.map((country, index) => \n          <CountryRankingItem \n            key={ index+ 1}\n            rank={ index+1 }\n            imgUrl={ country.flag }\n            imgAlt={`${ country.name } flag`}\n            countryName={ country.name }\n            statistic={ `${formatThousands(country[option] , ',')} ${option === 'area' ? 'km²' : ''}` }\n            setMode={ props.setMode }\n            setSearch = { props.setSearch }\n          />\n        )}\n      </>\n    )\n  }\n}\n\nexport default RankingsMode","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledInput = styled.input`\n  font-family: Arial;\n  width: 100%;\n  box-sizing: border-box;\n  font-size: 20px;\n  padding: 15px 25px;\n  border: 0;\n  border-bottom: 5px solid #212121;\n\n  &:focus {\n    outline: 2px solid black;\n  }\n`\n\nconst SearchBar = props => {\n  return (\n    <StyledInput \n      value={props.search}\n      onChange={event => props.setSearch(event.target.value)}\n      placeholder='Enter country...'\n    />\n  )\n}\n\nexport default SearchBar","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledCountrySearchItem = styled.div`\n  transition: background 0.5s;\n  display: flex;\n  align-items: center;\n  padding: 25px;\n  border-top: 1px solid black;\n  background: #fafafa;\n  gap: 10px;\n\n  &:hover {\n    transition: background 0.5s;\n    cursor: pointer;\n    background: #dcdcdc;\n  }\n`\n\nconst StyledFlag = styled.img`\n  width: 50px;\n  flex-basis: auto;\n`\n\nconst StyledCountryName = styled.span`\n  flex-grow: 1;\n  flex-basis: auto;\n`\n\nconst CountrySearchItem = props => {\n  return (\n    <StyledCountrySearchItem onClick={() => props.setSearch(props.countryName.toLowerCase())}>\n      <StyledFlag src={props.imgUrl} alt={props.imgAlt} />\n      <StyledCountryName>{props.countryName}</StyledCountryName>\n    </StyledCountrySearchItem>\n  )\n}\n\nexport default CountrySearchItem","import React, { useEffect, useRef, useState } from 'react'\nimport mapboxgl from 'mapbox-gl'\nimport styled from 'styled-components'\n\nconst StyledMap = styled.div`\n  margin-top: 20px;\n  width: 100%;\n  height: 250px;\n`\nconst MapboxGLMap = props => {\n  const [map, setMap] = useState(null)\n  const mapContainer = useRef(null)\n\n  useEffect(() => {\n    mapboxgl.accessToken = 'pk.eyJ1Ijoiam9obmF0YW5mIiwiYSI6ImNraTN3eWVuazA2cGYycG53aXJiMnN3ODgifQ.9l8q7pBtoBK-Cgkoz-Z4cQ'\n    const initialiseMap = ({ setMap, mapContainer }) => {\n\n      let map = null;\n\n      if(props.country.latlng.length) {\n        map = new mapboxgl.Map({\n          container: mapContainer.current,\n          style: 'mapbox://styles/mapbox/streets-v11',\n          center: [props.country.latlng[1], props.country.latlng[0]],\n          zoom: 2\n        })\n\n        map.on('load', () => {\n          setMap(map)\n          map.resize()\n        })\n      }\n    }\n\n    if (!map) initialiseMap({ setMap, mapContainer })\n    \n    }, [map, props.country.latlng])\n  \n  return props.country.latlng ? <StyledMap ref={el => (mapContainer.current = el)}></StyledMap> : null;\n}\n\nexport default MapboxGLMap","import React from 'react'\nimport styled from 'styled-components'\nimport MapboxGLMap from './MapboxGLMap'\nimport formatThousands from 'format-thousands'\n\nconst StyledCountrySearchSingleDescription = styled.div`\n  padding: 0px 25px 20px 25px;\n  margin-top: 20px;\n`\n\nconst StyledHeading = styled.h1`\n  font-size: 2em;\n  font-weight: 600;\n  text-align: center;\n`\n\nconst StyledFlag = styled.img`\n  display: block;\n  width: 50%;\n  margin: 20px auto;\n  box-shadow: 1px 1px 3px #adadad;\n`\n\nconst StyledCapitalText = styled.p`\n  text-align: center;\n`\n\nconst StyledSection = styled.section`\n  margin: 30px 0;\n\n  & > ul > li {\n    margin: 10px 0;\n  }\n`\n\nconst StyledSectionHeading = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 1.25em;\n  font-weight: 600;\n`\n\nconst StyledIcon = styled.i`\n  color: #5c7cfa;\n  width: 30px;\n`\n\nconst CountrySearchSingleDescription = props => {\n  const convertBordersToString = () => {\n    const borderCodes = props.borderCodes\n    let countryBorders = props.country.borders\n    countryBorders = countryBorders.map(border => {\n      return borderCodes.find(country => country[border])[border]\n    })\n    return countryBorders.join(', ')\n  }\n  \n  const convertCurrenciesToString = () => {\n    let resultArr = []\n    for(let i = 0; i < props.country.currencies.length; i++) {\n      resultArr = resultArr.concat(`${props.country.currencies[i].name} (${props.country.currencies[i].symbol})`)\n    }\n    return resultArr.join(', ')\n  }\n\n  const convertLanguagesToString = () => {\n    let resultArr = []\n    for(let i = 0; i < props.country.languages.length; i++) {\n      resultArr = resultArr.concat(`${props.country.languages[i].name} (${props.country.languages[i].nativeName})`)\n    }\n    return resultArr.join(', ')\n  }\n\n  const countrySimplified = {\n    capital: props.country.capital,\n    flag: props.country.flag,\n    organisations: {\n      regionalBlocs: props.country.regionalBlocs\n    },\n    geography: {\n      region: props.country.region,\n      subregion: props.country.subregion,\n      borders: convertBordersToString(),\n      timezones: props.country.timezones.join(', '),\n      area: props.country.area\n    },\n    economy: {\n      gini: props.country.gini,\n      currencies: convertCurrenciesToString()\n    },\n    people: {\n      population: props.country.population,\n      demonym: props.country.demonym,\n      languages: convertLanguagesToString()\n    }\n  }\n    \n  return (\n    <StyledCountrySearchSingleDescription>         \n      <StyledHeading>{countrySimplified.name}</StyledHeading>\n      <StyledFlag src={countrySimplified.flag} alt={`${countrySimplified.name} flag`}/>\n      <StyledCapitalText>{countrySimplified.capital ? `capital: ${countrySimplified.capital}` : ''}</StyledCapitalText>\n      <MapboxGLMap country={props.country} />\n\n      {\n      countrySimplified.organisations.regionalBlocs.length \n      ?\n      <StyledSection>\n        <StyledSectionHeading>\n          <StyledIcon className=\"fas fa-landmark\"></StyledIcon>\n          <span>ORGANISATIONS</span>\n        </StyledSectionHeading>\n        <ul>\n          {countrySimplified.organisations.regionalBlocs.map(org => (\n            <li key={org.acronym}>\n              {`${org.acronym} (${org.name})`}\n            </li>\n          ))}\n        </ul>\n      </StyledSection>\n      :\n      null\n      }\n\n      <StyledSection>\n        <StyledSectionHeading>\n          <StyledIcon className=\"fas fa-globe-asia\"></StyledIcon>\n          <span>GEOGRAPHY</span>\n        </StyledSectionHeading>\n        <ul>\n          { countrySimplified.geography.region ? <li>Region: { countrySimplified.geography.region }</li> : null }\n          { countrySimplified.geography.subregion ? <li>Subregion: { countrySimplified.geography.subregion }</li> : null }\n          { countrySimplified.geography.borders ? <li>Borders: { convertBordersToString() }</li> : null }\n          { countrySimplified.geography.timezones ? <li>Timezones: { countrySimplified.geography.timezones }</li> : null }\n          { countrySimplified.geography.area ? <li>Land area: { `${formatThousands(countrySimplified.geography.area, ',')} km²` }</li> : null }\n        </ul>\n      </StyledSection>\n\n      <StyledSection>\n        <StyledSectionHeading>\n          <StyledIcon className=\"fas fa-dollar-sign\"></StyledIcon>\n          <span>ECONOMY</span>\n        </StyledSectionHeading>\n        <ul>\n          { countrySimplified.economy.gini ? <li>Gini index: { countrySimplified.economy.gini }</li> : null }\n          { countrySimplified.economy.currencies ? <li>Currencies: { convertCurrenciesToString() }</li> : null }\n        </ul>\n      </StyledSection>\n\n      <StyledSection>\n        <StyledSectionHeading>\n          <StyledIcon className=\"fas fa-users\"></StyledIcon>\n          <span>PEOPLE</span>\n        </StyledSectionHeading>\n        <ul>\n          { countrySimplified.people.population ? <li>Population: { formatThousands(countrySimplified.people.population, ',') }</li> : null }\n          { countrySimplified.people.demonym ? <li>Demonym: { countrySimplified.people.demonym }</li> : null }\n          { countrySimplified.people.languages ? <li>Languages: { convertLanguagesToString() }</li> : null }\n        </ul>\n      </StyledSection>\n    </StyledCountrySearchSingleDescription>\n  )\n}\n\nexport default CountrySearchSingleDescription","import React from 'react'\nimport CountrySearchItem from './CountrySearchItem'\nimport CountrySearchSingleDescription from './CountrySearchSingleDescription'\n\nconst CountrySearchDisplay = props => {\n  const filterCountries = () => {\n    const singleCountry = props.countries.find(country => {\n      return country.name.toLowerCase() === props.search.toLowerCase()\n    })\n\n    if(singleCountry) {\n      return [singleCountry]\n    } else {\n      return props.countries.filter(country => {\n        return country.name.toLowerCase().includes(props.search.toLowerCase())\n      })\n    }\n  }\n\n  const filteredCountries = filterCountries(); \n\n  const borderCodes = props.countries.map(country => {\n    return { [country.alpha3Code]: country.name }\n  })\n\n  if(filteredCountries.length === 1) {\n    return <CountrySearchSingleDescription country={ filteredCountries[0] } borderCodes={ borderCodes }/> \n  }\n  else if(filteredCountries.length <= 5) {\n    return (\n      <div>\n        {filteredCountries.map(country => (\n          <CountrySearchItem\n            key={country.name}\n            imgUrl={country.flag}\n            imgAlt={`${country.name} flag`}\n            countryName={country.name}\n            setSearch={props.setSearch}\n          />\n        )\n        )}\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default CountrySearchDisplay","import React from 'react'\nimport SearchBar from '../SearchBar'\nimport CountrySearchDisplay from '../CountrySearchDisplay'\n\nconst SearchMode = props => {\n  return (\n    <>\n      <SearchBar\n        search={props.search}\n        setSearch={props.setSearch}\n      />\n      <CountrySearchDisplay \n        countries={props.countries}\n        search={props.search}\n        setSearch={props.setSearch}\n      />\n    </>\n  )\n}\n\nexport default SearchMode","import React from 'react'\nimport CardHeading from './CardHeading'\nimport CardFooter from './CardFooter'\nimport RankingsMode from './Modes/RankingsMode'\nimport SearchMode from './Modes/SearchMode'\nimport styled from 'styled-components'\n\nconst StyledCard = styled.div`\n  font-family: Open Sans;\n  box-shadow: 5px 5px 2px rgba(0, 0, 0, 0.5);\n  border-radius: 10px 10px 10px 10px;\n  margin: 50px auto 35px auto;\n  width: 65%;\n  min-width: 350px;\n  max-width: 500px;\n  background: white;\n`\n\nconst Card = props => {\n  return (\n    <StyledCard>\n      <CardHeading />\n        {\n\n        props.mode === 'search'\n        ?\n        <SearchMode \n          countries={props.countries}\n          search={props.search}\n          setSearch={props.setSearch}\n        />\n        :\n        <RankingsMode \n          countries={props.countries} \n          option={props.option}\n          setOption={props.setOption}\n          setMode={props.setMode}\n          setSearch={props.setSearch}\n          numberOfEntries={props.numberOfEntries}\n          setNumberOfEntries={props.setNumberOfEntries}\n          order={props.order}\n          setOrder={props.setOrder}\n        />\n        \n        }\n      <CardFooter />\n    </StyledCard>\n  )\n}\n\nexport default Card","import axios from 'axios'\n\nconst url = 'https://restcountries.eu/rest/v2/all'\n\nconst getCountries = async () => {\n  const response = await axios.get(url)\n  const data = response.data\n  return data\n}\n\nexport default { getCountries }","import React, { useState, useEffect } from 'react'\nimport NavBar from './components/NavBar'\nimport Card from './components/Card'\nimport countriesServices from './services/countries'\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [search, setSearch] = useState('')\n  const [option, setOption] = useState('')\n  const [mode, setMode] = useState('search') // options: 'search' and 'rankings'\n  const [numberOfEntries, setNumberOfEntries] = useState(25)\n  const [order, setOrder] = useState('ascending') // options: 'ascending' and 'descending' \n\n  useEffect(() => { // retrieve countries from api or from local storage \n    const retrieveCountries = async () => {\n      const localStorageCountries = JSON.parse(localStorage.getItem('countries'))\n      if(localStorageCountries && localStorageCountries.length === 250) { // check if local storage has the correct data \n        setCountries(JSON.parse(localStorage.getItem('countries')))\n      } else {\n        const countries = await countriesServices.getCountries()\n        setCountries(countries)\n        localStorage.setItem('countries', JSON.stringify(countries))\n      }\n    }\n\n    retrieveCountries()\n  }, [])\n  \n  return (\n    <div>\n      <NavBar \n        mode={mode}\n        setMode={setMode}\n      />\n      <Card \n        search={search}\n        setSearch={setSearch}\n        countries={countries}\n        option={option}\n        setOption={setOption}\n        mode={mode}\n        setMode={setMode}\n        numberOfEntries={numberOfEntries}\n        setNumberOfEntries={setNumberOfEntries}\n        order={order}\n        setOrder={setOrder}\n      />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}